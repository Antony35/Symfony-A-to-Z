name: CI

on: [push]

jobs:
  security-checker:
    runs-on: ubuntu-latest
    container:
      image: jakzal/phpqa:php8.1
      
    steps:
    - name: Check security
      working-directory: ../..
      run: |
        composer install
        composer require sensiolabs/security-checker
        vendor/bin/security-checker security:check --end-point=http://security.sensiolabs.org/check_lock
      env:
        COMPOSER_ALLOW_SUPERUSER: 1

  coding-standards:
    runs-on: ubuntu-latest
    container:
      image: jakzal/phpqa:php8.1
    steps:
    - name: Check coding standards
      working-directory: ../..
      run: |
        composer install
        composer require --dev squizlabs/php_codesniffer
        ./vendor/bin/phpcs -v --standard=PSR12 --ignore=./src/Kernel.php ./src
      env:
        COMPOSER_ALLOW_SUPERUSER: 1

  phpstan:
    runs-on: ubuntu-latest
    container:
      image: jakzal/phpqa:php8.1
    steps:
    - name: Run PHPStan
      working-directory: ../..
      run: |
        composer install
        composer require --dev phpstan/phpstan
        ./vendor/bin/phpstan analyse ./src
      env:
        COMPOSER_ALLOW_SUPERUSER: 1

  twig-lint:
    runs-on: ubuntu-latest
    container:
      image: jakzal/phpqa:php8.1
    steps:
    - name: Lint Twig templates
      working-directory: ../..
      run: |
        composer install
        composer require --dev friendsoftwig/twig-lint
        ./vendor/bin/twig-lint lint ./templates
      env:
        COMPOSER_ALLOW_SUPERUSER: 1

  phpunit:
    runs-on: ubuntu-latest
    container:
      image: php:8.1-apache
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: pass_test
          MYSQL_DATABASE: myapptest
          MYSQL_USER: myapptest
          MYSQL_PASSWORD: myapptest
        ports:
          - 3306:3306
    steps:
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
    - name: Check out code
      uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get update -yqq
        apt-get install -yqq git libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev nodejs npm
        docker-php-ext-install mysqli pdo pdo_mysql mbstring pdo_pgsql curl intl gd xml zip bz2 opcache
        php bin/console doctrine:database:drop --force --env=test
        php bin/console doctrine:database:create --env=test
        php bin/console doctrine:migration:migrate --env=test
        php bin/console doctrine:fixtures:load --no-interaction
        curl -sS https://getcomposer.org/installer | php
        php composer.phar install
        npm install
        npm run build
    - name: Run PHPUnit
      run: |
        php bin/phpunit
      env:
        DATABASE_URL: 'mysql://myapptest:myapptest@localhost:3306/myapptest'
